version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    container_name: technical_test_api
    restart: unless-stopped
    ports:
      - "8005:8005"
    depends_on:
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - APP_ENV=development
    volumes:
      - ./uploads:/root/uploads
      - ./config:/root/config

  mysql:
    image: bitnami/mysql:8.0
    container_name: technical_test_mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=Technical!
      - MYSQL_USER=technical_test
      - MYSQL_PASSWORD=Technical!
      - MYSQL_DATABASE=technical_test
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/bitnami/mysql
      - ./docker/mysql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    container_name: technical_test_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=technical_test
      - POSTGRES_PASSWORD=Technical!
      - POSTGRES_DB=technical_test
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/pgsql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U technical_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: technical_test_rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=technical_test
      - RABBITMQ_DEFAULT_PASS=Technical!
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
  postgres_data: